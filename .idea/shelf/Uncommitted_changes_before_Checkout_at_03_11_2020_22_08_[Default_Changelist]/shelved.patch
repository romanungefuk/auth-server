Index: src/main/java/com/equp/back/backend/controller/UserController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.equp.back.backend.controller;\r\n\r\nimport com.equp.back.backend.model.Experience;\r\nimport com.equp.back.backend.model.User;\r\nimport com.equp.back.backend.service.ExperienceService;\r\nimport com.equp.back.backend.service.UserService;\r\nimport lombok.extern.slf4j.Slf4j;\r\nimport org.json.JSONObject;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.mail.javamail.JavaMailSender;\r\nimport org.springframework.mail.javamail.MimeMessageHelper;\r\nimport org.springframework.web.bind.annotation.*;\r\n\r\nimport javax.mail.MessagingException;\r\nimport javax.mail.internet.MimeMessage;\r\n\r\n\r\n@RestController\r\n@Slf4j\r\npublic class UserController {\r\n\r\n    private final UserService userService;\r\n    private final ExperienceService experienceService;\r\n    private final JavaMailSender emailSender;\r\n\r\n\r\n    @Autowired\r\n    public UserController(UserService userService, ExperienceService experienceService, JavaMailSender emailSender) {\r\n        this.userService = userService;\r\n        this.experienceService = experienceService;\r\n        this.emailSender = emailSender;\r\n    }\r\n\r\n    @PostMapping(value = \"/api/v1/signup\")\r\n    public ResponseEntity<?> signup(@RequestParam (name = \"username\")String username,\r\n                                    @RequestParam (name = \"email\")String email,\r\n                                    @RequestParam (name = \"password\")String password) {\r\n\r\n\r\n        JSONObject responseObject = new JSONObject();\r\n\r\n            boolean b = userService.findByEmail(email)!=null;\r\n            if (b) {\r\n\r\n                responseObject.put(\"status\", 412);\r\n                responseObject.put(\"message\", \"Пользователь с email: \" + email + \" уже существует\");\r\n                responseObject.put(\"id\", -1);\r\n                System.out.print(responseObject.toString());\r\n                log.info(responseObject.toString());\r\n                return new ResponseEntity<>(responseObject.toMap(), HttpStatus.PRECONDITION_FAILED);\r\n            }\r\n\r\n\r\n        User user = new User(username,email,password);\r\n        userService.create(user);\r\n        responseObject.put(\"status\",201);\r\n        responseObject.put(\"message\", \"пользователь с email \"+email+\" создан\");\r\n        responseObject.put(\"id\",user.getId());\r\n        System.out.print(responseObject.toString());\r\n        Experience ttt = new Experience(user.getId());\r\n        log.info(\"опыт создан\");\r\n        experienceService.create(ttt);\r\n        log.info(responseObject.toString());\r\n        return new ResponseEntity<>(responseObject.toMap(), HttpStatus.CREATED);\r\n\r\n    }\r\n\r\n    @GetMapping(value = \"/api/v1/auth\")\r\n    public ResponseEntity<?> read(@RequestParam (name = \"email\")String email,\r\n                                    @RequestParam (name = \"password\")String password){\r\n\r\n        JSONObject responseObject = new JSONObject();\r\n\r\n        User user = userService.findByEmail(email);\r\n        if (user == null) {\r\n\r\n            responseObject.put(\"status\",404);\r\n            responseObject.put(\"message\",\"Пользователь с такими email не найден\");\r\n            responseObject.put(\"id\", -1);\r\n            responseObject.put(\"name\", \"null\");\r\n            responseObject.put(\"email\", \"null\");\r\n            responseObject.put(\"experience\", new Experience());\r\n            log.info(responseObject.toString());\r\n            return new ResponseEntity<>(responseObject.toMap(), HttpStatus.NOT_FOUND);\r\n        }else if (!user.getPassword().equals(password)){\r\n            responseObject.put(\"status\",401);\r\n            responseObject.put(\"message\",\"Не верный пароль\");\r\n            responseObject.put(\"id\", -1);\r\n            responseObject.put(\"name\", user.getName());\r\n            responseObject.put(\"email\", user.getEmail());\r\n            responseObject.put(\"experience\", experienceService.findByUserId(user.getId()));\r\n            log.info(responseObject.toString());\r\n            return new ResponseEntity<>(responseObject.toMap(), HttpStatus.UNAUTHORIZED);\r\n        }else {\r\n            responseObject.put(\"status\",302);\r\n            responseObject.put(\"message\",\"Пользователь найден\");\r\n            responseObject.put(\"id\", user.getId());\r\n            responseObject.put(\"name\", user.getName());\r\n            responseObject.put(\"email\", user.getEmail());\r\n            responseObject.put(\"experience\", experienceService.findByUserId(user.getId()));\r\n            log.info(responseObject.toString());\r\n            return new ResponseEntity<>(responseObject.toMap(), HttpStatus.FOUND);\r\n        }\r\n\r\n    }\r\n\r\n    @PostMapping(value = \"/api/v1/update\")\r\n    public ResponseEntity<?> delete(@RequestParam (name = \"email\")String email) throws MessagingException {\r\n        JSONObject responseObject = new JSONObject();\r\n\r\n        User user = userService.findByEmail(email);\r\n        if (user == null) {\r\n            responseObject.put(\"status\", 404);\r\n            responseObject.put(\"message\", \"Пользователь с такими email не найден\");\r\n            responseObject.put(\"id\", -1);\r\n            log.info(responseObject.toString());\r\n            return new ResponseEntity<>(responseObject.toMap(), HttpStatus.NOT_FOUND);\r\n        }else {\r\n\r\n            responseObject.put(\"status\",202);\r\n            responseObject.put(\"message\",\"На email: \"+email+\" отправлена информация о изменении пароля\");\r\n            responseObject.put(\"id\", -1L);\r\n\r\n\r\n            MimeMessage message = emailSender.createMimeMessage();\r\n            boolean multipart = true;\r\n            MimeMessageHelper helper = new MimeMessageHelper(message, multipart, \"utf-8\");\r\n            String htmlMsg = \"<!DOCTYPE html>\"+\r\n                    \"<html lang=\\\"ru\\\">\"+\r\n                    \"<head>\"+\r\n                    \"<meta http-equiv=\\\"content-type\\\" content=\\\"text/html; charset=utf-8\\\" />\"+\r\n                    \"<title>Title</title>\"+\r\n                    \"</head>\"+\r\n                    \"<body>\"+\r\n                    \"<h3>To change your password, follow the link:</h3>\"+\r\n//                    \"<a href=\\\"http://localhost:8080/password_change?email=\"+user.getEmail()+\"&name=\"+user.getName()+\"&id=\"+user.getId()+\"\\\">change password</a>\"+\r\n                    \"<a href=\\\"http://www.eq-up.ru:8080/password_change?email=\"+user.getEmail()+\"&name=\"+user.getName()+\"&id=\"+user.getId()+\"\\\">change password</a>\"+\r\n                    \"</body>\"+\r\n                    \"</html>\";\r\n\r\n            message.setContent(htmlMsg, \"text/html\");\r\n            helper.setTo(user.getEmail());\r\n            helper.setSubject(\"Change your EQup password\");\r\n            this.emailSender.send(message);\r\n\r\n\r\n        }\r\n        return new ResponseEntity<>(responseObject.toMap(), HttpStatus.ACCEPTED);\r\n\r\n    }\r\n\r\n    @PostMapping(value = \"/api/v1/delete\")\r\n    public ResponseEntity<?> delete(@RequestParam (name = \"email\")String email,\r\n                                  @RequestParam (name = \"password\")String password){\r\n        JSONObject responseObject = new JSONObject();\r\n        User user = userService.findByEmail(email);\r\n        if (user == null) {\r\n            responseObject.put(\"status\", 404);\r\n            responseObject.put(\"message\", \"Пользователь с такими email не найден\");\r\n            responseObject.put(\"id\", -1);\r\n            log.info(responseObject.toString());\r\n            return new ResponseEntity<>(responseObject.toMap(), HttpStatus.NOT_FOUND);\r\n        }else if (!user.getPassword().equals(password)) {\r\n            responseObject.put(\"status\", 401);\r\n            responseObject.put(\"message\", \"Не верный пароль\");\r\n            responseObject.put(\"id\", -1);\r\n\r\n            log.info(responseObject.toString());\r\n            return new ResponseEntity<>(responseObject.toMap(), HttpStatus.UNAUTHORIZED);\r\n        }else{\r\n            userService.delete(user.getId());\r\n            experienceService.delete(user.getId());\r\n            responseObject.put(\"status\",202);\r\n            responseObject.put(\"message\",\"Пользователь удален\");\r\n            responseObject.put(\"id\", -1L);\r\n        }\r\n        return new ResponseEntity<>(responseObject.toMap(), HttpStatus.ACCEPTED);\r\n\r\n    }\r\n\r\n    @PostMapping(value = \"/api/v1/experience-update\")\r\n    public ResponseEntity<?> experienceUpdate(@RequestParam (name = \"id\")Long id,\r\n                                              @RequestParam (name = \"all_experience\")double allExperience,\r\n                                              @RequestParam (name = \"mindfulness\")double mindfulness,\r\n                                              @RequestParam (name = \"attitudes\")double attitudes,\r\n                                              @RequestParam (name = \"selfregulation\")double selfregulation,\r\n                                              @RequestParam (name = \"empathy\")double empathy){\r\n        JSONObject responseObject = new JSONObject();\r\n        Experience experience = experienceService.findByUserId(id);\r\n        if (experience == null){\r\n                responseObject.put(\"status\", 404);\r\n                responseObject.put(\"message\", \"Запись о пользователе с такими id (\"+id+\") не найдена\");\r\n                responseObject.put(\"id\", -1);\r\n                log.info(responseObject.toString());\r\n                return new ResponseEntity<>(responseObject.toMap(), HttpStatus.NOT_FOUND);\r\n        }else{\r\n        experience.setAllExperience(allExperience);\r\n        experience.setMindfulness(mindfulness);\r\n        experience.setAttitudes(attitudes);\r\n        experience.setSelfRegulation(selfregulation);\r\n        experience.setEmpathy(empathy);\r\n        experienceService.update(experience);\r\n            responseObject.put(\"status\",302);\r\n            responseObject.put(\"id\", id);\r\n            responseObject.put(\"experience\", experience);\r\n            log.info(responseObject.toString());\r\n        }\r\n        return new ResponseEntity<>(responseObject.toMap(), HttpStatus.ACCEPTED);\r\n    }\r\n\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/equp/back/backend/controller/UserController.java	(revision 2c72898e968cb1a074b8558099396e4a362b67f2)
+++ src/main/java/com/equp/back/backend/controller/UserController.java	(date 1604430458706)
@@ -1,6 +1,7 @@
 package com.equp.back.backend.controller;
 
 import com.equp.back.backend.model.Experience;
+import com.equp.back.backend.model.JWT;
 import com.equp.back.backend.model.User;
 import com.equp.back.backend.service.ExperienceService;
 import com.equp.back.backend.service.UserService;
@@ -21,9 +22,11 @@
 @Slf4j
 public class UserController {
 
+
     private final UserService userService;
     private final ExperienceService experienceService;
     private final JavaMailSender emailSender;
+    private JWT token; // временный токен
 
 
     @Autowired
@@ -31,6 +34,7 @@
         this.userService = userService;
         this.experienceService = experienceService;
         this.emailSender = emailSender;
+
     }
 
     @PostMapping(value = "/api/v1/signup")
@@ -59,9 +63,10 @@
         responseObject.put("message", "пользователь с email "+email+" создан");
         responseObject.put("id",user.getId());
         System.out.print(responseObject.toString());
-        Experience ttt = new Experience(user.getId());
-        log.info("опыт создан");
-        experienceService.create(ttt);
+        Experience tempExperience = new Experience(user.getId());
+        experienceService.create(tempExperience);
+        log.info("опыт для "+user.getName()+" создан");
+
         log.info(responseObject.toString());
         return new ResponseEntity<>(responseObject.toMap(), HttpStatus.CREATED);
 
Index: .idea/dataSources.local.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"dataSourceStorageLocal\">\r\n    <data-source name=\"postgre4equp\" uuid=\"05127448-3fb1-4349-babf-629c646325ee\">\r\n      <database-info product=\"PostgreSQL\" version=\"12.4\" jdbc-version=\"4.2\" driver-name=\"PostgreSQL JDBC Driver\" driver-version=\"42.2.5\" dbms=\"POSTGRES\" exact-version=\"12.4\" exact-driver-version=\"42.2\">\r\n        <identifier-quote-string>&quot;</identifier-quote-string>\r\n      </database-info>\r\n      <case-sensitivity plain-identifiers=\"lower\" quoted-identifiers=\"exact\" />\r\n      <secret-storage>master_key</secret-storage>\r\n      <user-name>equp</user-name>\r\n      <schema-mapping>\r\n        <introspection-scope>\r\n          <node kind=\"database\" qname=\"@\">\r\n            <node kind=\"schema\" qname=\"@\" />\r\n          </node>\r\n        </introspection-scope>\r\n      </schema-mapping>\r\n    </data-source>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/dataSources.local.xml	(revision 2c72898e968cb1a074b8558099396e4a362b67f2)
+++ .idea/dataSources.local.xml	(date 1604427437657)
@@ -2,7 +2,7 @@
 <project version="4">
   <component name="dataSourceStorageLocal">
     <data-source name="postgre4equp" uuid="05127448-3fb1-4349-babf-629c646325ee">
-      <database-info product="PostgreSQL" version="12.4" jdbc-version="4.2" driver-name="PostgreSQL JDBC Driver" driver-version="42.2.5" dbms="POSTGRES" exact-version="12.4" exact-driver-version="42.2">
+      <database-info product="PostgreSQL" version="12.4 (Ubuntu 12.4-0ubuntu0.20.04.1)" jdbc-version="4.2" driver-name="PostgreSQL JDBC Driver" driver-version="42.2.5" dbms="POSTGRES" exact-version="12.4" exact-driver-version="42.2">
         <identifier-quote-string>&quot;</identifier-quote-string>
       </database-info>
       <case-sensitivity plain-identifiers="lower" quoted-identifiers="exact" />
@@ -10,8 +10,8 @@
       <user-name>equp</user-name>
       <schema-mapping>
         <introspection-scope>
-          <node kind="database" qname="@">
-            <node kind="schema" qname="@" />
+          <node kind="database" qname="PostgreSQL-7801">
+            <node kind="schema" negative="1" />
           </node>
         </introspection-scope>
       </schema-mapping>
Index: src/main/java/com/equp/back/backend/model/JWT.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/equp/back/backend/model/JWT.java	(date 1604430458841)
+++ src/main/java/com/equp/back/backend/model/JWT.java	(date 1604430458841)
@@ -0,0 +1,13 @@
+package com.equp.back.backend.model;
+
+import lombok.extern.slf4j.Slf4j;
+import org.slf4j.Logger;
+
+@Slf4j
+public class JWT {
+    private String token = "tokentokentokentokentokentokentoken";
+
+    boolean verification(String token){
+        return this.token.equals(token);
+    }
+}
Index: EQup_back.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule=\"true\" type=\"JAVA_MODULE\" version=\"4\">\r\n  <component name=\"FacetManager\">\r\n    <facet type=\"Spring\" name=\"Spring\">\r\n      <configuration />\r\n    </facet>\r\n    <facet type=\"web\" name=\"Web\">\r\n      <configuration>\r\n        <webroots>\r\n          <root url=\"file://$MODULE_DIR$/src/main/webapp\" relative=\"/\" />\r\n        </webroots>\r\n        <sourceRoots>\r\n          <root url=\"file://$MODULE_DIR$/src/main/java\" />\r\n          <root url=\"file://$MODULE_DIR$/src/main/resources\" />\r\n        </sourceRoots>\r\n      </configuration>\r\n    </facet>\r\n    <facet type=\"jpa\" name=\"JPA\">\r\n      <configuration>\r\n        <setting name=\"validation-enabled\" value=\"true\" />\r\n        <setting name=\"provider-name\" value=\"Hibernate\" />\r\n        <datasource-mapping>\r\n          <factory-entry name=\"entityManagerFactory\" value=\"05127448-3fb1-4349-babf-629c646325ee\" />\r\n        </datasource-mapping>\r\n        <naming-strategy-map />\r\n      </configuration>\r\n    </facet>\r\n  </component>\r\n  <component name=\"NewModuleRootManager\" LANGUAGE_LEVEL=\"JDK_11\">\r\n    <output url=\"file://$MODULE_DIR$/target/classes\" />\r\n    <output-test url=\"file://$MODULE_DIR$/target/test-classes\" />\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$/src/main/java\" isTestSource=\"false\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/src/main/resources\" type=\"java-resource\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/src/test/java\" isTestSource=\"true\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/src/main/webapp\" type=\"java-resource\" />\r\n      <excludeFolder url=\"file://$MODULE_DIR$/target\" />\r\n    </content>\r\n    <orderEntry type=\"jdk\" jdkName=\"11\" jdkType=\"JavaSDK\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework.boot:spring-boot-starter-web:2.3.4.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework.boot:spring-boot-starter:2.3.4.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework.boot:spring-boot-starter-logging:2.3.4.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: ch.qos.logback:logback-classic:1.2.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: ch.qos.logback:logback-core:1.2.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.apache.logging.log4j:log4j-to-slf4j:2.13.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.apache.logging.log4j:log4j-api:2.13.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.slf4j:jul-to-slf4j:1.7.30\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.yaml:snakeyaml:1.26\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework.boot:spring-boot-starter-json:2.3.4.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.fasterxml.jackson.core:jackson-databind:2.11.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.fasterxml.jackson.core:jackson-core:2.11.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.11.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.11.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.fasterxml.jackson.module:jackson-module-parameter-names:2.11.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-web:5.2.9.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.springframework.boot:spring-boot-starter-test:2.3.4.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.springframework.boot:spring-boot-test:2.3.4.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.springframework.boot:spring-boot-test-autoconfigure:2.3.4.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.jayway.jsonpath:json-path:2.4.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: net.minidev:json-smart:2.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: net.minidev:accessors-smart:1.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.ow2.asm:asm:5.0.4\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: jakarta.xml.bind:jakarta.xml.bind-api:2.3.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: jakarta.activation:jakarta.activation-api:1.2.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.assertj:assertj-core:3.16.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.hamcrest:hamcrest:2.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.jupiter:junit-jupiter:5.6.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.jupiter:junit-jupiter-api:5.6.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.apiguardian:apiguardian-api:1.1.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.opentest4j:opentest4j:1.2.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.platform:junit-platform-commons:1.6.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.jupiter:junit-jupiter-params:5.6.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.jupiter:junit-jupiter-engine:5.6.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.platform:junit-platform-engine:1.6.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.mockito:mockito-core:3.3.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: net.bytebuddy:byte-buddy:1.10.14\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: net.bytebuddy:byte-buddy-agent:1.10.14\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.objenesis:objenesis:2.6\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.mockito:mockito-junit-jupiter:3.3.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.skyscreamer:jsonassert:1.5.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: com.vaadin.external.google:android-json:0.0.20131108.vaadin1\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.springframework:spring-test:5.2.9.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.xmlunit:xmlunit-core:2.7.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.json:json:20180813\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework.boot:spring-boot-starter-data-jpa:2.3.4.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework.boot:spring-boot-starter-aop:2.3.4.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.aspectj:aspectjweaver:1.9.6\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework.boot:spring-boot-starter-jdbc:2.3.4.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.zaxxer:HikariCP:3.4.5\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-jdbc:5.2.9.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: jakarta.transaction:jakarta.transaction-api:1.3.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: jakarta.persistence:jakarta.persistence-api:2.2.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.hibernate:hibernate-core:5.4.21.Final\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.jboss.logging:jboss-logging:3.4.1.Final\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.javassist:javassist:3.24.0-GA\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: antlr:antlr:2.7.7\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.jboss:jandex:2.1.3.Final\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.fasterxml:classmate:1.5.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.dom4j:dom4j:2.1.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.hibernate.common:hibernate-commons-annotations:5.1.0.Final\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.glassfish.jaxb:jaxb-runtime:2.3.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.glassfish.jaxb:txw2:2.3.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.sun.istack:istack-commons-runtime:3.0.11\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework.data:spring-data-jpa:2.3.4.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework.data:spring-data-commons:2.3.4.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-orm:5.2.9.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-tx:5.2.9.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-aspects:5.2.9.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework.boot:spring-boot-starter-mail:2.3.4.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.sun.mail:jakarta.mail:1.6.5\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.sun.activation:jakarta.activation:1.2.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework.boot:spring-boot-starter-data-rest:2.3.4.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework.data:spring-data-rest-webmvc:3.3.4.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework.data:spring-data-rest-core:3.3.4.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework.hateoas:spring-hateoas:1.1.2.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework.plugin:spring-plugin-core:2.0.0.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.atteo:evo-inflector:1.2.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.fasterxml.jackson.core:jackson-annotations:2.11.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework.boot:spring-boot-starter-tomcat:2.3.4.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: jakarta.annotation:jakarta.annotation-api:1.3.5\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.apache.tomcat.embed:tomcat-embed-core:9.0.38\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.glassfish:jakarta.el:3.0.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.apache.tomcat.embed:tomcat-embed-websocket:9.0.38\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.projectlombok:lombok:1.18.12\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.postgresql:postgresql:42.2.16\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"RUNTIME\" name=\"Maven: org.checkerframework:checker-qual:3.5.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-context-support:5.2.9.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-beans:5.2.9.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework.boot:spring-boot-autoconfigure:2.3.4.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework.boot:spring-boot:2.3.4.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-core:5.2.9.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-jcl:5.2.9.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-context:5.2.9.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-aop:5.2.9.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-expression:5.2.9.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-webmvc:5.2.9.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.thymeleaf:thymeleaf-spring5:3.0.11.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.thymeleaf:thymeleaf:3.0.11.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.attoparser:attoparser:2.0.5.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.unbescape:unbescape:1.1.6.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.slf4j:slf4j-api:1.7.30\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: javax.servlet:javax.servlet-api:4.0.1\" level=\"project\" />\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- EQup_back.iml	(revision 2c72898e968cb1a074b8558099396e4a362b67f2)
+++ EQup_back.iml	(date 1604427109862)
@@ -12,6 +12,7 @@
         <sourceRoots>
           <root url="file://$MODULE_DIR$/src/main/java" />
           <root url="file://$MODULE_DIR$/src/main/resources" />
+          <root url="file://$MODULE_DIR$/src/main/webapp" />
         </sourceRoots>
       </configuration>
     </facet>
